{"file_contents":{"README.md":{"content":"# Muma’s ‘Mazing Barbeque 🍖🔥\n\nWelcome to **Muma’s ‘Mazing Barbeque** — a comic book-inspired, over-the-top landing page designed to excite, entertain, and entice food lovers to RSVP to the (fictional) hottest grill party in the multiverse.\n\n---\n\n## 📸 Live Preview\n\n> Deployed with [Vite](https://vitejs.dev/) + React and hosted via GitHub Pages. *(https://blvckkryptonite.github.io/mumas-mazing-barbeque/)*\n\n---\n\n## 🎯 Project Purpose\n\nThis project was created as a fun, high-impact frontend application using React, Tailwind CSS, and animation libraries. It allowed exploration of complex UI, animation techniques, and theme integration — all styled to feel like a comic book hero event.\n\n---\n\n## 🦸‍♂️ Features\n\n- **Animated Hero Banner** with comic-style heading and slogan\n- **Full-screen background image** with styled text offset\n- **Scroll-animated sections** using Framer Motion\n- **Chef Bio Cards** with creative one-liners and hover interactions\n- **Ticket CTA Buttons** repeated for emphasis\n- **Comic-themed fonts** and custom styling\n- **Gallery Section**\n- **FAQ Section**\n- **Google Map Embed** for venue\n- **Dark Theme with Fire/Red Gradients**\n- **Fully Responsive & Accessible**\n- **Stripe integration for ticket sales (planned)**\n\n---\n\n## 🛠️ Technologies Used\n\n### Core Tech Stack\n- **React.js** – Component-based frontend framework\n- **Vite** – Fast build tool and dev server\n- **Node.js / npm** – Package management\n- **Tailwind CSS** - Utility-first custom styling\n- **Framer Motion** - Animation library for scroll and element animation\n- **React Router DOM** - Routing (for multi-page ticket integration)\n- **SplitWords** - For word-based & emoji animation handling\n\n### Fonts & Assets\n- **Bangers** (for comic-style headers)\n- **Poppins** (for body)\n- **AI-Generated Comic Art** using Midjourney and reference images\n\n---\n\n## 📱 Responsiveness\n\nMuma’s ‘Mazing BBQ is fully responsive and optimized for seamless viewing across all devices. Whether you're browsing on a large desktop screen or a small mobile phone, the layout adapts beautifully to ensure clarity, usability, and fun.\n\nResponsive design was achieved using **Tailwind CSS** with custom breakpoints, fluid typography, and flexible layout structures to preserve the comic-style vibe on any screen size.\n\n### Desktop & Mobile Mockups\n\n\n![Desktop & Mobile Device Mockup](src/assets/images/mmb-mockup.png) \n\n\n---\n\n\n## 🔲 Wireframes\n\nBelow is the initial wireframe sketch and a refined digital wireframe for the Muma’s ‘Mazing BBQ landing page. These mockups were created to outline the structure, flow, and content hierarchy of the site in a fun and intuitive way.\n\n### 📝 Hand-written draft structure\n\n![Wireframe Sketch](src/assets/images/wireframe-original-mmb.jpg)\n\n*Original hand-drawn layout showing section flow and content plans.*\n\n---\n\n### 💻 AI Enhanced Wireframe Sketch (Low-Fidelity)\n\n![Enhanced Wireframe](src/assets/images/wireframe-enhanced-mmb.png)\n\n*Comic-style low-fidelity wireframe representing key sections:*\n\n- **Hero Banner:** Title and a funny slogan\n- **Invitation:** Event details and a CTA button\n- **Meet Our Chefs:** Visual grid of featured chefs\n- **Event Details:** Time, location, and schedule info\n- **Gallery:** Highlight reels and photos\n- **FAQ:** Common questions answered\n- **Section Separators:** Comic-style dividers between each section\n\n---\n\nThese wireframes were used to guide layout and component structure before styling and animations were added with Tailwind CSS, React, and Framer Motion.\n\n---\n\n## 🗂️ Folder Structure\n\n```\nmumas-mazing-barbeque/\n├── public/\n│   └── index.html\n├── src/\n│   ├── assets/\n│   ├── components/\n│   │   ├── HeroBanner.jsx\n│   │   ├── Invitation.jsx\n│   │   ├── Chefs.jsx\n│   │   ├── Gallery.jsx\n│   │   ├── FAQ.jsx\n│   │   └── Location.jsx\n│   ├── styles/\n│   │   └── tailwind.css\n│   ├── App.jsx\n│   └── main.jsx\n├── tailwind.config.js\n├── vite.config.js\n└── package.json\n\n```\n\n---\n\n## Design Notes\n\n### Fonts\n- `font-heading`: Bangers\n- `font-body`: Poppins\n\n### Colors\n- **Primary**: Black/Dark Gray\n- **Secondary**: Red, Yellow-Orange (Flame Gradient)\n\n---\n\n## 📦 Installation Instructions\n\n```bash\ngit clone https://github.com/BlvckKryptonite/mumas-mazing-barbeque.git\ncd mumas-mazing-barbeque\nnpm install\nnpm run dev\n```\n\nOpen `http://localhost:5003/` or whichever port Vite assigns.\n\n---\n\n## Development Notes\n\n### Challenges Encountered 🚧\n\n1. **Localhost 404 Errors**\n   - **Cause**: Vite expected `index.html` in `public/`, but it was mistakenly placed in the root.\n   - **Fix**: Moved `index.html` into the root directory and ensured correct project structure.\n\n2. **Vite Not Loading**\n   - **Cause**: Conflicting Vite version or missing dependencies.\n   - **Fix**: Clean install and port change detection.\n\n3. **Missing Image Rendering**\n   - **Cause**: Background image placement in hero banner required careful positioning.\n   - **Fix**: Absolute/relative layout with Tailwind and flexbox.\n\n4. **Font Configuration Not Applying**\n   - **Cause**: Misnamed font class or missing import from Google Fonts.\n   - **Fix**: Imported Bangers and Poppins properly and extended Tailwind config.\n\n5. **Animations Not Working**\n   - **Cause**: Incorrect import or Framer Motion not installed.\n   - **Fix**: Ran `npm install framer-motion` and ensured correct component usage.\n6. **Hero image not displaying correctly**\n   - **Fix**:** Used bg-cover bg-center flex justify-end for image alignment and responsiveness.\n\n   ### Other fixes:\n   - Tailwind not applying due to incorrect content paths → Fixed\n   - JSX structure breaking Framer Motion → Fixed with proper <motion> wrapping\n\n\n\n---\n\n## 📈 Performance & Optimization\n\n- I plan to deploy the project on [Vercel](https://vercel.com/) to take advantage of its fast global CDN, optimized static rendering, and seamless integration with React for improved performance and near-instant load times.\n- Lazy loading sections and background images (in progress)\n- Scroll-triggered animations only activate when in view\n- Hero image and components styled to maximize visual appeal without excessive asset weight\n\n---\n\n### New Features Added ✨\n\n- **Loading Screen Animation** with custom logo and enhanced effects\n- **Stripe Payment Integration** for secure ticket purchases\n- **Multi-page Routing** with React Router for tickets and success pages\n- **Performance Optimizations** with code splitting and optimized animations\n- **Enhanced Logo Integration** as favicon and loading animation\n- **Production-Ready Configuration** for Replit deployment\n\n---\n\n## 🚀 Stripe Integration\n\nThe application now includes full Stripe payment processing for ticket sales:\n\n- **Frontend**: Stripe Checkout integration with React\n- **Backend**: Server-side API routes for secure payment processing\n- **Security**: Environment variables for API keys\n- **Success Flow**: Post-purchase success page with order confirmation\n\n### Payment Features\n- Multiple ticket tiers (VIP, General Admission, Early Bird)\n- Secure checkout process\n- Order confirmation and success handling\n- Test mode integration for development\n\n---\n\n## ⚡ Performance Optimizations\n\n- **Code Splitting**: Vendor and animation chunks separated for faster loading\n- **Optimized Animations**: BBQ flame glow effects with `will-change` for better performance\n- **Asset Optimization**: Favicon integration and image loading optimization\n- **CSS Performance**: Reduced animation complexity in development environment\n\n---\n\n## 🔧 Technical Challenges Faced\n\n### Major Challenges\n\n1. **Vercel Deployment Issues**\n   - **Problem**: Server-side API routes not supported on static hosting\n   - **Challenge**: Stripe integration requires backend functionality\n   - **Solution**: Migrated to Replit for full-stack deployment capability\n\n2. **Payment Processing Architecture**\n   - **Problem**: Secure handling of Stripe secret keys in frontend-only environment\n   - **Challenge**: GitHub Pages cannot handle server-side environment variables\n   - **Solution**: Implemented proper backend API routes with secure key management\n\n3. **Animation Performance Issues**\n   - **Problem**: Complex glow animations causing slow rendering in tickets section\n   - **Challenge**: Background glows impacting development environment performance\n   - **Solution**: Optimized CSS animations with `will-change` and reduced complexity\n\n### Minor Challenges\n\n1. **DOM Nesting Warnings**\n   - **Issue**: SplitWords component creating nested div elements within paragraph tags\n   - **Status**: Identified through console logs, structural optimization in progress\n\n2. **Port Configuration**\n   - **Issue**: External port access configuration for preview functionality\n   - **Solution**: Updated .replit configuration with proper port forwarding\n\n3. **Asset Path Management**\n   - **Issue**: Logo integration across favicon and loading screen\n   - **Solution**: Centralized asset management with proper path resolution\n\n4. **Development vs Production Builds**\n   - **Issue**: Build optimization for faster loading times\n   - **Solution**: Implemented manual chunks in Vite configuration\n\n---\n\n### Deployment Considerations\n\n**Why Not Vercel?**\n- Static hosting limitations with dynamic API routes\n- Server-side functionality required for Stripe payment processing\n- Environment variable security concerns for payment keys\n- Need for full-stack deployment capability\n\n**Replit Advantages:**\n- Full-stack deployment support\n- Secure environment variable handling\n- Built-in development and production environments\n- Seamless integration with existing codebase\n\n---\n\n### Recent Updates & Improvements ✨\n\n**Latest Enhancements (2024):**\n- **Contact Page Implementation** ✅ – Added comprehensive contact form with service offerings and animated fire icon\n- **Asset Path Optimization** ✅ – Resolved image loading issues with proper public folder structure\n- **UI Polish & Icon Updates** ✅ – Enhanced bullet points with proper emoji icons (✨, 🔥, 🎨, 🚀)\n- **Animation Performance** ✅ – Improved motion.img implementations with proper object-contain styling\n- **Development Workflow** ✅ – Streamlined dev environment with parallel API server setup\n\n**Current Deployment Status:**\n- **Platform**: Replit (Full-stack deployment)\n- **Frontend**: Vite + React (Port 3002)\n- **Backend**: Express.js API server (Node.js)\n- **Payment Processing**: Stripe integration with secure checkout\n- **Asset Management**: Optimized public folder structure for static assets\n\n---\n\n### Future Enhancements\n\n- Loading animation (comic style \"Page Flip\" or flaming grill spinner) ✅ **COMPLETED**\n- Section transitions with fire or smoke effects\n- Stripe-powered RSVP or ticket sales form ✅ **COMPLETED**\n- Contact page with service offerings ✅ **COMPLETED**\n- Fully animated parallax scroll effects\n- Add sound FX toggle (comic zap, sizzle, etc.)\n- Performance monitoring and optimization\n- Mobile-specific animation optimizations\n\n---\n\n## 🚀 Recent Deployment Challenges & Solutions\n\n### Asset Loading & Path Resolution\n\n**Challenge**: Fire icon and other assets not loading properly in production\n- **Root Cause**: Inconsistent naming conventions (fire_icon.png vs fire-icon.png) and improper import patterns\n- **Solution**: Standardized asset naming and moved critical assets to public folder for direct path access\n- **Implementation**: Used `/fire-icon.png` pattern matching the loading screen logo approach\n\n### Performance Optimization\n\n**Challenge**: Complex glow animations causing performance issues in development\n- **Root Cause**: Heavy CSS animations with multiple shadow effects\n- **Solution**: Optimized animation complexity and added `will-change` properties for better rendering\n- **Result**: Smoother scroll performance and reduced development lag\n\n### Multi-Environment Configuration\n\n**Challenge**: Coordinating frontend and backend development workflows\n- **Solution**: Implemented parallel workflow configuration:\n  - Frontend dev server on port 3002\n  - Backend API server running simultaneously\n  - Proper port forwarding for external access\n\n### Production Deployment Considerations\n\n**Why Replit Over Other Platforms:**\n- **Full-stack Support**: Unlike static hosting (GitHub Pages), Replit handles both frontend and backend\n- **Environment Security**: Secure handling of Stripe API keys and environment variables\n- **Integrated Development**: Seamless transition from development to production\n- **Port Management**: Built-in port forwarding and external access configuration\n\n---\n\n## 💬 Attribution & Credits\n\n- Comic Fonts: [Google Fonts](https://fonts.google.com/)\n- Animations: [Framer Motion](https://www.framer.com/motion/)\n- Images generated using Midjourney and real photos of Chef Muma\n- Inspired by [dogelonmars.com](https://dogelonmars.com/)\n\n---\n\n## 🧠 Lessons Learned\n\n> Sometimes, it's the **smallest issues** (like an `index.html` in the wrong folder) that cause the biggest confusion.\n\nThis project deepened understanding of Vite + React workflows, Tailwind theming, animated UIs, and the importance of checking structural integrity during local setup.\n\n**Key Technical Insights:**\n- Asset path consistency is crucial for production deployment\n- Parallel development workflows improve full-stack productivity  \n- Animation performance optimization requires careful balance between visual impact and smooth execution\n- Environment-specific configuration prevents deployment surprises\n\n---\n\n## 🔗 Connect With Me\n\nWant to book Muma's 'Mazing Barbeque at your event or collaborate on something cool? Reach out!\n\n- Email: [mumathedeveloper@gmail.com](mailto:yourname@example.com)\n- GitHub: [BlvckKryptonite](https://github.com/BlvckKryptonite)\n\n---\n\n> **\"Where the grill meets greatness — and the steak saves the day.\"**","size_bytes":14026},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n};\n","size_bytes":81},"server.js":{"content":"\nimport express from 'express';\nimport cors from 'cors';\nimport path from 'path';\nimport { fileURLToPath } from 'url';\nimport Stripe from 'stripe';\n\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = path.dirname(__filename);\n\nconst app = express();\nconst PORT = process.env.PORT || 5000;\n\n// Initialize Stripe\nconst stripe = new Stripe(process.env.STRIPE_SECRET_KEY || 'sk_test_placeholder');\n\n// Middleware\napp.use(cors({\n  origin: process.env.NODE_ENV === 'production' \n    ? ['https://mumas-mazing-barbeque.replit.app']\n    : ['http://localhost:3000', 'http://localhost:3001', 'http://localhost:3002'],\n  credentials: true\n}));\n\napp.use(express.json({ limit: '10mb' }));\napp.use(express.static(path.join(__dirname, 'dist')));\n\n// Compression middleware for production\nif (process.env.NODE_ENV === 'production') {\n  const compression = await import('compression');\n  app.use(compression.default());\n}\n\n// API Routes\napp.post('/api/create-checkout-session', async (req, res) => {\n  try {\n    const { ticketType, quantity } = req.body;\n    \n    const prices = {\n      'early-bird': 2500,\n      'general': 3500,\n      'vip': 7500\n    };\n\n    const session = await stripe.checkout.sessions.create({\n      payment_method_types: ['card'],\n      line_items: [\n        {\n          price_data: {\n            currency: 'usd',\n            product_data: {\n              name: `${ticketType.charAt(0).toUpperCase() + ticketType.slice(1)} Ticket - Muma's 'Mazing BBQ`,\n            },\n            unit_amount: prices[ticketType],\n          },\n          quantity: quantity,\n        },\n      ],\n      mode: 'payment',\n      success_url: `${req.headers.origin}/success?session_id={CHECKOUT_SESSION_ID}`,\n      cancel_url: `${req.headers.origin}/tickets`,\n      metadata: {\n        ticketType,\n        quantity: quantity.toString()\n      }\n    });\n\n    res.json({ url: session.url });\n  } catch (error) {\n    console.error('Stripe error:', error);\n    res.status(500).json({ error: 'Failed to create checkout session' });\n  }\n});\n\napp.get('/api/checkout-session/:session_id', async (req, res) => {\n  try {\n    const session = await stripe.checkout.sessions.retrieve(req.params.session_id);\n    res.json({\n      id: session.id,\n      customer_email: session.customer_email,\n      payment_status: session.payment_status,\n      amount_total: session.amount_total,\n      metadata: session.metadata,\n    });\n  } catch (error) {\n    console.error('Stripe error:', error);\n    res.status(500).json({ error: error.message });\n  }\n});\n\n// Health check\napp.get('/api/health', (req, res) => {\n  res.json({ status: 'OK', timestamp: new Date().toISOString() });\n});\n\n// Serve React app for all other routes\napp.get('*', (req, res) => {\n  res.sendFile(path.join(__dirname, 'dist', 'index.html'));\n});\n\n// Error handling middleware\napp.use((err, req, res, next) => {\n  console.error(err.stack);\n  res.status(500).json({ error: 'Something went wrong!' });\n});\n\napp.listen(PORT, '0.0.0.0', () => {\n  console.log(`🔥 Server running on port ${PORT}`);\n  console.log(`🌐 Environment: ${process.env.NODE_ENV || 'development'}`);\n});\n","size_bytes":3118},"tailwind.config.js":{"content":"/** @type {import('tailwindcss').Config} */\nexport default {\n  content: [\n    \"./index.html\",\n    \"./src/**/*.{js,ts,jsx,tsx}\",\n  ],\n  theme: {\n    extend: {\n      fontFamily: {\n        'heading': ['Bangers', 'cursive'],\n        'body': ['Poppins', 'sans-serif'],\n      },\n      animation: {\n        'flame': 'flame 2s ease-in-out infinite alternate',\n        'bounce-slow': 'bounce 3s infinite',\n      },\n      keyframes: {\n        flame: {\n          '0%': { \n            transform: 'scale(1) rotate(-1deg)',\n            filter: 'hue-rotate(0deg)'\n          },\n          '100%': { \n            transform: 'scale(1.05) rotate(1deg)',\n            filter: 'hue-rotate(30deg)'\n          }\n        }\n      },\n      screens: {\n        'xs': '475px',\n      }\n    },\n  },\n  plugins: [],\n}","size_bytes":781},"vite.config.js":{"content":"import { defineConfig } from 'vite';\nimport react from '@vitejs/plugin-react';\n\nexport default defineConfig({\n  plugins: [react()],\n  server: {\n    host: '0.0.0.0',\n    port: 3000,\n    allowedHosts: [\n      'localhost',\n      '127.0.0.1',\n      '.repl.co',       // allow any *.repl.co\n      '.replit.dev',    // allow any *.replit.dev\n      '.replit.app',    // allow any *.replit.app\n      'mumas-mazing-barbeque.replit.app', // specific domain\n    ],\n    proxy: {\n      '/api': {\n        target: 'http://localhost:5000',\n        changeOrigin: true,\n      }\n    }\n  },\n  build: {\n    rollupOptions: {\n      output: {\n        manualChunks: {\n          vendor: ['react', 'react-dom'],\n          animations: ['framer-motion']\n        }\n      }\n    }\n  }\n});","size_bytes":756},"api/checkout-session.js":{"content":"\nimport Stripe from 'stripe';\n\nconst stripe = new Stripe(process.env.STRIPE_SECRET_KEY);\n\nexport default async function handler(req, res) {\n  if (req.method !== 'GET') {\n    return res.status(405).json({ error: 'Method not allowed' });\n  }\n\n  try {\n    const { session_id } = req.query;\n\n    if (!session_id) {\n      return res.status(400).json({ error: 'Session ID is required' });\n    }\n\n    const session = await stripe.checkout.sessions.retrieve(session_id);\n\n    res.status(200).json({\n      id: session.id,\n      customer_email: session.customer_email,\n      payment_status: session.payment_status,\n      amount_total: session.amount_total,\n      metadata: session.metadata,\n    });\n  } catch (error) {\n    console.error('Stripe error:', error);\n    res.status(500).json({ error: error.message });\n  }\n}\n","size_bytes":810},"api/create-checkout-session.js":{"content":"\nimport Stripe from 'stripe';\n\nconst stripe = new Stripe(process.env.STRIPE_SECRET_KEY);\n\nexport default async function handler(req, res) {\n  if (req.method !== 'POST') {\n    return res.status(405).json({ error: 'Method not allowed' });\n  }\n\n  try {\n    const { priceId, tierName, price, quantity = 1 } = req.body;\n\n    // Convert price string to cents (remove $ and convert to number)\n    const priceInCents = Math.round(parseFloat(price.replace('$', '')) * 100);\n\n    const session = await stripe.checkout.sessions.create({\n      payment_method_types: ['card'],\n      line_items: [\n        {\n          price_data: {\n            currency: 'usd',\n            product_data: {\n              name: `${tierName} - Muma's Mazing BBQ Event`,\n              description: 'BBQ Event Ticket - Saturday, August 9, 1:00PM CDT',\n              images: [`${process.env.VITE_APP_URL || 'https://mumas-mazing-barbeque.replit.app'}/muma-logo.png`],\n            },\n            unit_amount: priceInCents,\n          },\n          quantity: quantity,\n        },\n      ],\n      mode: 'payment',\n      success_url: `${process.env.VITE_APP_URL || 'https://your-domain.com'}/success?session_id={CHECKOUT_SESSION_ID}`,\n      cancel_url: `${process.env.VITE_APP_URL || 'https://your-domain.com'}/tickets`,\n      metadata: {\n        tier: tierName,\n        event: 'Mumas Mazing BBQ',\n        date: 'August 9, 2025',\n      },\n    });\n\n    res.status(200).json({ sessionId: session.id });\n  } catch (error) {\n    console.error('Stripe error:', error);\n    res.status(500).json({ error: error.message });\n  }\n}\n","size_bytes":1578},"src/App.jsx":{"content":"import React, { useState, useEffect, Suspense, lazy } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport HeroBanner from \"./components/HeroBanner\";\nimport Invitation from \"./components/Invitation\";\nimport Chefs from \"./components/Chefs\";\nimport EventDetails from \"./components/EventDetails\";\nimport Gallery from \"./components/Gallery\";\nimport FAQ from \"./components/FAQ\";\nimport LoadingScreen from \"./components/LoadingScreen\";\nimport FireTransition from \"./components/animations/FireTransition\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nconst Tickets = lazy(() => import(\"./pages/Tickets\"));\nconst Success = lazy(() => import(\"./pages/Success\"));\nconst Contact = lazy(() => import(\"./pages/Contact\"));\n\nconst Home = () => {\n  const [isLoading, setIsLoading] = useState(() => {\n    // Only show loading on initial visit, not when navigating back\n    return !sessionStorage.getItem('hasSeenLoading');\n  });\n\n  const handleLoadingComplete = () => {\n    setIsLoading(false);\n    sessionStorage.setItem('hasSeenLoading', 'true');\n  };\n\n  return (\n    <>\n      <AnimatePresence>\n        {isLoading && (\n          <LoadingScreen onComplete={handleLoadingComplete} />\n        )}\n      </AnimatePresence>\n\n      {!isLoading && (\n        <main className=\"bg-black text-white font-body overflow-x-hidden w-full max-w-full\">\n          <FireTransition>\n            <HeroBanner />\n          </FireTransition>\n\n          <div className=\"w-full h-4 bg-gradient-to-r from-red-500 to-yellow-400\" />\n\n          <FireTransition delay={0.2}>\n            <Invitation />\n          </FireTransition>\n\n          <div className=\"w-full h-4 bg-gradient-to-r from-yellow-400 to-orange-500\" />\n\n          <FireTransition delay={0.3}>\n            <Chefs />\n          </FireTransition>\n\n          <div className=\"w-full h-4 bg-gradient-to-r from-orange-500 to-pink-500\" />\n\n          <FireTransition delay={0.4}>\n            <EventDetails />\n          </FireTransition>\n\n          <div className=\"w-full h-4 bg-gradient-to-r from-pink-500 to-purple-600\" />\n\n          <FireTransition delay={0.5}>\n            <Gallery />\n          </FireTransition>\n\n          <div className=\"w-full h-4 bg-gradient-to-r from-purple-600 to-red-500\" />\n\n          <FireTransition delay={0.6}>\n            <FAQ />\n          </FireTransition>\n        </main>\n      )}\n    </>\n  );\n};\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Suspense fallback={<div className=\"min-h-screen bg-black flex items-center justify-center\">\n            <div className=\"text-yellow-400 text-xl\">Loading...</div>\n          </div>}>\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/tickets\" element={<Tickets />} />\n            <Route path=\"/success\" element={<Success />} />\n            <Route path=\"/contact\" element={<Contact />} />\n          </Routes>\n        </Suspense>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","size_bytes":2999},"src/main.jsx":{"content":"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App.jsx';\nimport './styles/tailwind.css';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n","size_bytes":249},"src/api/stripe.js":{"content":"\nimport Stripe from 'stripe';\n\nconst stripe = new Stripe(process.env.STRIPE_SECRET_KEY);\n\nexport async function createCheckoutSession(req, res) {\n  if (req.method !== 'POST') {\n    return res.status(405).json({ error: 'Method not allowed' });\n  }\n\n  try {\n    const { priceId, tierName, price } = req.body;\n\n    // Convert price string to cents (remove $ and convert to number)\n    const priceInCents = Math.round(parseFloat(price.replace('$', '')) * 100);\n\n    const session = await stripe.checkout.sessions.create({\n      payment_method_types: ['card'],\n      line_items: [\n        {\n          price_data: {\n            currency: 'usd',\n            product_data: {\n              name: `${tierName} - Muma's Mazing BBQ Event`,\n              description: 'BBQ Event Ticket - Saturday, August 9, 1:00PM CDT',\n              images: [`${process.env.VITE_APP_URL || 'http://localhost:3000'}/attached_assets/muma-logo.png`],\n            },\n            unit_amount: priceInCents,\n          },\n          quantity: 1,\n        },\n      ],\n      mode: 'payment',\n      success_url: `${process.env.VITE_APP_URL || 'http://localhost:3000'}/success?session_id={CHECKOUT_SESSION_ID}`,\n      cancel_url: `${process.env.VITE_APP_URL || 'http://localhost:3000'}/tickets`,\n      metadata: {\n        tier: tierName,\n        event: 'Mumas Mazing BBQ',\n        date: 'August 9, 2025',\n      },\n    });\n\n    res.status(200).json({ sessionId: session.id });\n  } catch (error) {\n    console.error('Stripe error:', error);\n    res.status(500).json({ error: error.message });\n  }\n}\n","size_bytes":1556},"src/components/Chefs.jsx":{"content":"import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport headChefImg from \"../assets/images/headchef.png\";\nimport flamebeardImg from \"../assets/images/flamebeard-frank.png\";\nimport sandraImg from \"../assets/images/saucy-sandra.png\";\nimport charlieImg from \"../assets/images/charcoal-charlie.png\";\nimport chefsBg from \"../assets/images/chefs-background.png\";\nimport SplitWords from \"./animations/SplitWords\";\nimport { Link } from \"react-router-dom\"; // Tickets page\n\nconst chefs = [\n  {\n    name: \"Muma the Grillmaster\",\n    role: \"Head Chef & Chief Firebender\",\n    img: headChefImg,\n    desc: \"Wields tongs like Thor wields Mjölnir. His legendary flame grilled buffalo wings once caused a standing ovation at a silent retreat.\",\n  },\n  {\n    name: \"Flamebeard Frank\",\n    role: \"Smoker Supreme\",\n    img: flamebeardImg,\n    desc: \"Can smoke a whole rack of ribs with just a glance. Rubbed ribs so perfectly, even vegetarians shed a tear.\",\n  },\n  {\n    name: \"Saucy Sandra\",\n    role: \"Condiment Conjurer\",\n    img: sandraImg,\n    desc: \"Invented 37 secret sauces. All of them perfect. They say her chili is so hot, it once grilled the bun.\",\n  },\n  {\n    name: \"Charcoal Charlie\",\n    role: \"Pit Magician\",\n    img: charlieImg,\n    desc: \"Charcoal lights itself when he enters. Once grilled in a snowstorm — turned it into summer. No one knows how.\",\n  },\n];\n\nconst Chefs = () => {\n  const headChef = chefs[0];\n  const otherChefs = chefs.slice(1);\n\n  return (\n    <motion.section\n      className=\"relative chefs-bg text-white py-20 px-4 text-center overflow-hidden bg-cover bg-center bg-no-repeat\"\n      style={{\n        backgroundImage: `url(${chefsBg})`,\n        willChange: 'transform, opacity'\n      }}\n      initial={{ opacity: 0, y: 20 }}\n      whileInView={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5, ease: \"easeOut\" }}\n      viewport={{ once: true, margin: \"-100px\" }}\n    >\n      {/* Mobile-only absolute <img> fallback */}\n      <img\n        src={chefsBg}\n        alt=\"Chefs Background\"\n        className=\"md:hidden absolute inset-0 w-full h-full object-cover z-0\"\n      />\n\n      {/* Overlay */}\n      <div className=\"absolute inset-0 bg-black opacity-40 z-0\" />\n\n      {/* Main Content */}\n      <div className=\"relative z-10\">\n        <h2 className=\"text-4xl md:text-5xl font-heading uppercase mb-6 tracking-wide text-[#b91c1c] drop-shadow-md\">\n          Meet Our Chefs\n        </h2>\n\n        <div className=\"max-w-2xl mx-auto mb-16\">\n          <motion.div\n            initial={{ opacity: 0, scale: 0.98 }}\n            whileInView={{ opacity: 1, scale: 1 }}\n            transition={{ duration: 0.4, ease: \"easeOut\" }}\n            viewport={{ once: true, margin: \"-50px\" }}\n            className=\"bg-black border-4 border-yellow-400 p-6 rounded-lg shadow-lg min-h-[400px] head-chef-glow hover:head-chef-glow-hover transition-all duration-200\"\n            style={{ willChange: 'transform, opacity' }}\n          >\n            <img\n              src={headChef.img}\n              alt={headChef.name}\n              className=\"w-full object-contain mb-4 rounded-md max-h-[400px]\"\n            />\n            <h3 className=\"text-2xl font-heading text-yellow-300\">\n              {headChef.name}\n            </h3>\n            <p className=\"italic text-sm\">{headChef.role}</p>\n            <p className=\"mt-2 font-body\">\n              <SplitWords text={headChef.desc} />\n            </p>\n          </motion.div>\n        </div>\n\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8 max-w-6xl mx-auto\">\n          {otherChefs.map((chef, idx) => (\n            // Card Background Glow Effect\n            <motion.div\n              key={idx}\n              initial={{ opacity: 0, scale: 0.98 }}\n              whileInView={{ opacity: 1, scale: 1 }}\n              transition={{ duration: 0.4, ease: \"easeOut\", delay: idx * 0.1 }}\n              viewport={{ once: true, margin: \"-50px\" }}\n              className=\"bg-black border-2 border-white p-6 rounded-lg shadow-md min-h-[360px] glow-on-scroll hover:glow-on-hover transition-all duration-200\"\n              style={{ willChange: 'transform, opacity' }}\n            >\n              <img\n                src={chef.img}\n                alt={chef.name}\n                className=\"w-full object-contain mb-4 rounded-md max-h-[400px]\"\n              />\n              <h3 className=\"text-xl font-heading text-yellow-300\">\n                {chef.name}\n              </h3>\n              <p className=\"italic text-sm\">{chef.role}</p>\n              <p className=\"mt-2 font-body\">\n                <SplitWords text={chef.desc} />\n              </p>\n            </motion.div>\n          ))}\n        </div>\n\n        <Link to=\"/tickets\">\n          <motion.button\n            whileHover={{\n              scale: 1.07,\n              rotate: [-1, 1, 0],\n              transition: { yoyo: Infinity, duration: 0.3 },\n            }}\n            initial={{ opacity: 0, scale: 0.9 }}\n            whileInView={{ opacity: 1, scale: 1 }}\n            transition={{ delay: 1.2, duration: 0.5 }}\n            className=\"mt-12 px-8 py-3 bg-red-600 hover:bg-red-700 text-white font-bold font-heading text-xl rounded-none border-2 border-white shadow-lg transition-transform\"\n          >\n            Get Tickets\n          </motion.button>\n        </Link>\n      </div>\n    </motion.section>\n  );\n};\n\nexport default Chefs;","size_bytes":5383},"src/components/EventDetails.jsx":{"content":"import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport eventBg from \"../assets/images/chefs-background.png\"; // imported image\nimport SplitWords from \"./animations/SplitWords\";\nimport { Link } from \"react-router-dom\"; // Tickets page\n\nconst EventDetails = () => {\n  return (\n    <motion.section\n      id=\"event-details\"\n      initial={{ opacity: 0, y: 40 }}\n      whileInView={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.8, ease: \"easeOut\" }}\n      viewport={{ once: true }}\n      className=\"relative bg-black text-white py-20 px-6 md:px-12 font-body event-bg\"\n      style={{\n        backgroundImage: `url(${eventBg})`,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n      }}\n    >\n      {/* Dark overlay to enhance contrast */}\n      <div className=\"absolute inset-0 bg-black opacity-60 z-0 pointer-events-none\"></div>\n\n      {/* Mobile override for background */}\n      <style>\n        {`\n          @media (max-width: 768px) {\n            section.event-bg {\n              background-image: url('${eventBg}') !important;\n              background-position: center top !important;\n              background-repeat: no-repeat !important;\n              background-size: cover !important;\n            }\n          }\n        `}\n      </style>\n\n      {/* Event content layer */}\n      <div className=\"relative z-10 max-w-7xl mx-auto grid grid-cols-1 lg:grid-cols-2 gap-12 items-start\">\n        {/* Text Content */}\n        <div className=\"space-y-6 text-center lg:text-left\">\n          <h2 className=\"text-4xl md:text-5xl font-heading uppercase mb-6 tracking-wide text-[#b91c1c] drop-shadow-md\">\n            Event Details\n          </h2>\n\n          <p className=\"text-2xl font-bold text-yellow-300 leading-tight\">\n            🔥 Saturday, August 9<br />\n            🍖 1:00PM CDT\n          </p>\n\n          <div className=\"text-lg leading-relaxed text-gray-200 space-y-2\">\n            <p className=\"font-bold text-white\">\n              📍 The Grill Grounds — Dow Academic Center\n            </p>\n            <p>\n              <SplitWords text=\"Brazosport College\" />\n              <br />\n              <SplitWords text=\"500 College Blvd\" />\n              <br />\n              <SplitWords text=\"Lake Jackson, TX 77566\" />\n            </p>\n            <p className=\"italic text-sm text-gray-400 pt-2\">\n              <SplitWords text=\"Brought to you by The League of Flame-Wielding Foodies™\" />\n            </p>\n          </div>\n\n          <Link to=\"/tickets\">\n            <motion.button\n              whileHover={{\n                scale: 1.07,\n                rotate: [-1, 1, 0],\n                transition: { yoyo: Infinity, duration: 0.3 },\n              }}\n              initial={{ opacity: 0, scale: 0.9 }}\n              whileInView={{ opacity: 1, scale: 1 }}\n              transition={{ delay: 1.2, duration: 0.5 }}\n              className=\"mt-12 px-8 py-3 bg-red-600 hover:bg-red-700 text-white font-bold font-heading text-xl rounded-none border-2 border-white shadow-lg transition-transform\"\n            >\n              Reserve Your Spot\n            </motion.button>\n          </Link>\n        </div>\n\n        {/* Google Map */}\n        <div className=\"border-4 border-red-600 rounded-xl overflow-hidden shadow-xl\">\n          <iframe\n            title=\"BBQ Map Location\"\n            src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d435.987713507736!2d-95.40828046550254!3d29.049488273854728!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x86404213fa62f5ff%3A0x1a1db666b512d5ab!2sBrazosport%20College!5e0!3m2!1sen!2szm!4v1752074238430!5m2!1sen!2szm\"\n            width=\"100%\"\n            height=\"450\"\n            allowFullScreen=\"\"\n            loading=\"lazy\"\n            referrerPolicy=\"no-referrer-when-downgrade\"\n            className=\"w-full h-[450px]\"\n          ></iframe>\n        </div>\n      </div>\n    </motion.section>\n  );\n};\n\nexport default EventDetails;","size_bytes":3934},"src/components/FAQ.jsx":{"content":"import React, { useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nconst faqs = [\n  {\n    question: \"Is this a family-friendly event?\",\n    answer:\n      \"Absolutely! We welcome grill-lovers of all ages. There’s even a mini BBQ hero play zone for the kiddos!\",\n  },\n  {\n    question: \"Do I need to bring anything?\",\n    answer:\n      \"Just your appetite and your BBQ spirit! We provide the rest — food, drinks, music, and fun.\",\n  },\n  {\n    question: \"Are vegetarian/vegan options available?\",\n    answer:\n      \"Yes! We’ve got grilled veggie skewers, Beyond Burgers, and smoked tofu. Even plant-based fans can join the BBQverse.\",\n  },\n  {\n    question: \"Where can I park?\",\n    answer:\n      \"We’ve got plenty of on-site parking and superhero valet support. Capes optional.\",\n  },\n];\n\nconst FAQ = () => {\n  const [openIndex, setOpenIndex] = useState(null);\n\n  const toggleFAQ = (index) => {\n    setOpenIndex(openIndex === index ? null : index);\n  };\n\n  return (\n    <section\n      id=\"faq\"\n      className=\"relative bg-black text-white py-20 px-6 md:px-12 z-10 font-body overflow-hidden\"\n    >\n      <div className=\"max-w-4xl mx-auto\">\n        <h2 className=\"text-4xl md:text-5xl text-center font-heading text-[#db2626] uppercase mb-10 drop-shadow-md\">\n          Frequently Asked Questions\n        </h2>\n\n        <div className=\"space-y-6\">\n          {faqs.map((faq, index) => (\n            <div\n              key={index}\n              className={`rounded-xl border-4 ${\n                openIndex === index ? \"border-red-600\" : \"border-[#f6e5c3]\"\n              } p-6 cursor-pointer bg-gray-900 hover:bg-gray-800 transition`}\n              onClick={() => toggleFAQ(index)}\n            >\n              <div className=\"flex justify-between items-center\">\n                <h3 className=\"text-xl font-semibold font-heading text-white\">\n                  {faq.question}\n                </h3>\n                <span className=\"text-2xl font-bold text-yellow-400\">\n                  {openIndex === index ? \"−\" : \"+\"}\n                </span>\n              </div>\n\n              <AnimatePresence>\n                {openIndex === index && (\n                  <motion.p\n                    initial={{ opacity: 0, height: 0 }}\n                    animate={{ opacity: 1, height: \"auto\" }}\n                    exit={{ opacity: 0, height: 0 }}\n                    className=\"mt-4 text-gray-300 leading-relaxed\"\n                  >\n                    {faq.answer}\n                  </motion.p>\n                )}\n              </AnimatePresence>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Mobile */}\n      <style>\n        {`\n          @media (max-width: 768px) {\n            section#faq {\n              background-image: none !important;\n              background-color: #000 !important;\n            }\n          }\n        `}\n      </style>\n    </section>\n  );\n};\n\nexport default FAQ;\n","size_bytes":2939},"src/components/Gallery.jsx":{"content":"import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport SplitWords from \"./animations/SplitWords\";\nimport bgImage from \"../assets/images/chefs-background.png\";\nimport { Link } from \"react-router-dom\"; // Tickets page\n\n// Gallery images\nimport img1 from \"../assets/images/food 1.png\";\nimport img2 from \"../assets/images/food 5.png\";\nimport img3 from \"../assets/images/food 7.png\";\nimport img4 from \"../assets/images/food 11.png\";\nimport img5 from \"../assets/images/food 10.png\";\nimport img6 from \"../assets/images/food 4.png\";\nimport img7 from \"../assets/images/food 3.png\";\nimport img8 from \"../assets/images/food 2.png\";\nimport img9 from \"../assets/images/food 6.png\";\nimport img10 from \"../assets/images/food 12.png\";\nimport img11 from \"../assets/images/food 13.png\";\nimport img12 from \"../assets/images/food 14.png\";\n\nconst images = [\n  img1,\n  img2,\n  img3,\n  img4,\n  img5,\n  img6,\n  img7,\n  img8,\n  img9,\n  img10,\n  img11,\n  img12,\n];\n\nconst Gallery = () => {\n  return (\n    <motion.section\n      id=\"gallery\"\n      initial={{ opacity: 0, y: 40 }}\n      whileInView={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.8, ease: \"easeOut\" }}\n      viewport={{ once: true }}\n      className=\"relative text-white py-20 px-6 md:px-12 font-body gallery-bg bg-cover bg-center overflow-hidden\"\n      style={{\n        backgroundImage: `url(${bgImage})`,\n      }}\n    >\n      {/* Dark overlay for readability */}\n      <div className=\"absolute inset-0 bg-black opacity-50 z-0 pointer-events-none\" />\n\n      <div className=\"relative z-10 max-w-7xl mx-auto\">\n        <div className=\"text-center mb-6\">\n          <h2 className=\"text-4xl md:text-5xl font-heading text-[#db2626] uppercase drop-shadow-md\">\n            The Grillery 📸\n          </h2>\n        </div>\n\n        <div className=\"text-center text-lg md:text-xl text-yellow-400 mb-10 font-bold max-w-3xl mx-auto leading-relaxed\">\n          <SplitWords speed={3}>\n            Get a peek behind the smoke — where grills blaze, meat sizzles, and\n            heroes pose with ribs like they’re trophies.\n          </SplitWords>\n        </div>\n\n        {/* Desktop Grid */}\n        <div className=\"hidden md:grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6 max-w-6xl mx-auto\">\n          {images.map((src, index) => (\n            <div\n              key={index}\n              className=\"overflow-hidden rounded-lg border-[3px] border-[#F4E0B9] shadow-lg transform hover:scale-105 transition duration-300 bg-black max-w-[95%] mx-auto aspect-[3/4] flex items-center justify-center\"\n            >\n              <img\n                src={src}\n                alt={`Gallery ${index + 1}`}\n                className=\"object-contain w-full h-full\"\n              />\n            </div>\n          ))}\n        </div>\n\n        {/* Mobile Carousel */}\n        <div className=\"md:hidden flex space-x-4 overflow-x-auto snap-x snap-mandatory px-2 mt-10\">\n          {images.map((src, index) => (\n            <div\n              key={index}\n              className=\"flex-shrink-0 w-[80%] snap-center rounded-lg border-[3px] border-[#F4E0B9] shadow-md bg-black aspect-[3/4] overflow-hidden\"\n            >\n              <img\n                src={src}\n                alt={`Gallery ${index + 1}`}\n                className=\"object-contain w-full h-full\"\n              />\n            </div>\n          ))}\n        </div>\n\n        <div className=\"text-center mt-10\">\n          <Link to=\"/tickets\">\n            <motion.button\n              whileHover={{\n                scale: 1.07,\n                rotate: [-1, 1, 0],\n                transition: { yoyo: Infinity, duration: 0.3 },\n              }}\n              initial={{ opacity: 0, scale: 0.9 }}\n              whileInView={{ opacity: 1, scale: 1 }}\n              transition={{ delay: 1.2, duration: 0.5 }}\n              className=\"mt-12 px-8 py-3 bg-red-600 hover:bg-red-700 text-white font-bold font-heading text-xl rounded-none border-2 border-white shadow-lg transition-transform\"\n            >\n              Get Tickets\n            </motion.button>\n          </Link>\n        </div>\n      </div>\n\n      {/* Mobile background override */}\n      <style>\n        {`\n          @media (max-width: 768px) {\n            section.gallery-bg {\n              background-image: url('${bgImage}') !important;\n              background-position: center top !important;\n              background-repeat: no-repeat !important;\n              background-size: cover !important;\n            }\n          }\n        `}\n      </style>\n    </motion.section>\n  );\n};\n\nexport default Gallery;\n","size_bytes":4569},"src/components/HeroBanner.jsx":{"content":"import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport GraphemeSplitter from \"grapheme-splitter\";\nimport heroBanner from \"../assets/images/herobanner.png\";\nimport heroBannerVertical from \"../assets/images/herobannervertical.png\";\n\nconst splitter = new GraphemeSplitter();\nconst headlineChars = splitter.splitGraphemes(\"🔥 Muma’s ‘Mazing BBQ 🔥\");\n\nconst HeroBanner = () => {\n  return (\n    <motion.section\n      initial={{ y: -50, opacity: 0 }}\n      animate={{ y: 0, opacity: 1 }}\n      transition={{ type: \"spring\", stiffness: 60, damping: 10 }}\n      className=\"relative w-full min-h-[80vh] md:h-screen bg-cover bg-no-repeat bg-center flex items-center px-4 sm:px-6 md:px-20 overflow-hidden\"\n      style={{\n        backgroundImage: `url(${heroBanner})`,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        willChange: \"transform\",\n      }}\n    >\n      {/* Mobile background override */}\n      <style>\n        {`\n          @media (max-width: 768px) {\n            section {\n              background-image: url(${heroBannerVertical}) !important;\n              background-position: center top !important;\n              background-size: cover !important;\n              background-repeat: no-repeat !important;\n            }\n          }\n        `}\n      </style>\n\n      {/* Background overlay */}\n      <div className=\"absolute inset-0 bg-black bg-opacity-20 z-0\"></div>\n\n      {/* Gradient fade to next section */}\n      <div className=\"absolute bottom-0 w-full h-10 bg-gradient-to-b from-transparent to-black z-10\"></div>\n\n      {/* Headline and Tagline */}\n      <motion.div\n        initial={{ opacity: 0, scale: 0.8 }}\n        animate={{ opacity: 1, scale: 1 }}\n        transition={{ duration: 0.8, ease: \"easeOut\" }}\n        className=\"relative z-10 text-center max-w-6xl mx-auto px-6\"\n        style={{ willChange: \"transform, opacity\" }}\n      >\n        <motion.h1\n          className=\"text-2xl sm:text-3xl md:text-6xl lg:text-6xl xl:text-[4rem] font-heading text-white mb-4 leading-tight tracking-wider whitespace-nowrap overflow-hidden text-center\"\n          initial={{ opacity: 0, y: 20, scale: 0.9 }}\n          animate={{ opacity: 1, y: 0, scale: 1 }}\n          transition={{\n            duration: 0.8,\n            ease: \"easeOut\",\n            type: \"spring\",\n            stiffness: 100,\n            damping: 15,\n          }}\n          style={{\n            willChange: \"transform, opacity\",\n            minWidth: \"fit-content\",\n          }}\n        >\n          <span className=\"animate-glow\">🔥Muma's 'Mazing BBQ🔥</span>\n        </motion.h1>\n\n        <motion.p\n          className=\"text-base sm:text-lg md:text-2xl font-body italic text-white px-2 sm:px-0\"\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 1, duration: 1 }}\n        >\n          \"Where the grill meets greatness & steak saves the day!\"\n        </motion.p>\n      </motion.div>\n\n      {/* Scroll Cue */}\n      <motion.div\n        className=\"absolute bottom-4 sm:bottom-6 left-1/2 transform -translate-x-1/2 text-white text-2xl animate-bounce z-20\"\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ delay: 2 }}\n      >\n        ↓\n      </motion.div>\n    </motion.section>\n  );\n};\n\nexport default HeroBanner;\n","size_bytes":3340},"src/components/Invitation.jsx":{"content":"import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport invitationBg from \"../assets/images/invitation-background.png\";\nimport SplitWords from \"./animations/SplitWords\";\nimport { Link } from \"react-router-dom\"; // Tickets page\n\nconst Invitation = () => {\n  return (\n    <motion.section\n      className=\"invitation-bg relative text-red-100 py-24 px-6 text-center overflow-hidden bg-cover bg-center bg-no-repeat\"\n      style={{\n        backgroundImage: `url(${invitationBg})`, // For desktop\n      }}\n      initial={{ opacity: 0, y: 50 }}\n      whileInView={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.8, ease: \"easeOut\" }}\n      viewport={{ once: true }}\n    >\n      {/* 🛠 Mobile-only background image fallback */}\n      <img\n        src={invitationBg}\n        alt=\"Invitation Background\"\n        className=\"md:hidden absolute inset-0 w-full h-full object-cover z-0\"\n      />\n\n      {/* Overlay */}\n      <div className=\"absolute inset-0 bg-black opacity-30 z-0\" />\n\n      {/* Main Content */}\n      <div className=\"relative z-10\">\n        <h2 className=\"text-4xl md:text-5xl font-heading uppercase mb-6 tracking-wide text-[#b91c1c] drop-shadow-md\">\n          You're Invited!\n        </h2>\n\n        <p className=\"max-w-3xl mx-auto text-lg md:text-xl font-body leading-relaxed\">\n          <SplitWords>\n            🍖{\" \"}\n            <strong className=\"text-yellow-400\">\n              Enter the mouth-watering BBQverse...\n            </strong>{\" \"}\n            A world of sizzling ribs, juicy steaks, succulent strips and\n            all-around grilled goodness.\n          </SplitWords>\n        </p>\n\n        <p className=\"max-w-3xl mx-auto text-lg md:text-xl font-body mt-6 leading-relaxed\">\n          <SplitWords>\n            🌴{\" \"}\n            <span className=\"text-green-400 font-semibold\">\n              Set in the fiery heart of the neighborhood\n            </span>\n            , where smoke swirls like battle cries and tongs clash like swords —\n            Muma's backyard transforms into a grill-powered arena of flavor!\n          </SplitWords>\n        </p>\n\n        <p className=\"max-w-3xl mx-auto text-lg md:text-xl font-body mt-6 leading-relaxed\">\n          <SplitWords>\n            ♨️{\" \"}\n            <span className=\"text-[#FF0000] font-semibold\">\n              This isn’t just a barbeque — it’s a culinary showdown of epic\n              proportions.\n            </span>{\" \"}\n            Grab your tickets. Claim your plate. Become part of the legend.\n          </SplitWords>\n        </p>\n\n        <Link to=\"/tickets\">\n          <motion.button\n            whileHover={{\n              scale: 1.07,\n              rotate: [-1, 1, 0],\n              transition: { yoyo: Infinity, duration: 0.3 },\n            }}\n            initial={{ opacity: 0, scale: 0.9 }}\n            whileInView={{ opacity: 1, scale: 1 }}\n            transition={{ delay: 1.2, duration: 0.5 }}\n            className=\"mt-12 px-8 py-3 bg-red-600 hover:bg-red-700 text-white font-bold font-heading text-xl rounded-none border-2 border-white shadow-lg transition-transform\"\n          >\n            Get Tickets\n          </motion.button>\n        </Link>\n      </div>\n    </motion.section>\n  );\n};\n\nexport default Invitation;","size_bytes":3248},"src/components/LoadingScreen.jsx":{"content":"import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\n\nconst LoadingScreen = ({ onComplete }) => {\n  const [progress, setProgress] = useState(0);\n  const [isComplete, setIsComplete] = useState(false);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress(prev => {\n        if (prev >= 100) {\n          setIsComplete(true);\n          setTimeout(() => onComplete(), 300);\n          clearInterval(timer);\n          return 100;\n        }\n        return prev + 4;\n      });\n    }, 30);\n\n    return () => clearInterval(timer);\n  }, [onComplete]);\n\n  return (\n    <motion.div\n      className=\"fixed inset-0 z-50 bg-black flex items-center justify-center\"\n      initial={{ opacity: 1 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n      transition={{ duration: 0.5 }}\n    >\n      <div className=\"text-center\">\n        <motion.div\n          className=\"w-40 h-40 mb-6 flex items-center justify-center mx-auto\"\n          initial={{ scale: 0, rotate: -45 }}\n          animate={{\n            scale: [0, 1.2, 1],\n            rotate: [0, 10, 0],\n          }}\n          transition={{\n            duration: 1.2,\n            ease: \"easeOut\",\n            times: [0, 0.6, 1],\n          }}\n        >\n          <motion.img\n            src=\"/muma-logo.png\"\n            alt=\"Muma's Loading Logo\"\n            className=\"w-full h-full object-contain filter drop-shadow-2xl\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ delay: 0.3, duration: 0.6 }}\n            style={{\n              filter:\n                \"drop-shadow(0 0 20px rgba(255, 77, 77, 0.8)) drop-shadow(0 0 40px rgba(255, 77, 77, 0.4))\",\n            }}\n          />\n        </motion.div>\n        <motion.h1\n          className=\"text-4xl font-heading text-white mb-2\"\n          initial={{ y: 50, opacity: 0 }}\n          animate={{ y: 0, opacity: 1 }}\n          transition={{ duration: 0.8, delay: 0.3 }}\n        >\n          MUMA'S 'MAZING\n        </motion.h1>\n        <motion.h2\n          className=\"text-2xl font-heading text-yellow-400\"\n          initial={{ y: 50, opacity: 0 }}\n          animate={{ y: 0, opacity: 1 }}\n          transition={{ duration: 0.8, delay: 0.5 }}\n        >\n          BARBEQUE\n        </motion.h2>\n        <motion.div\n          className=\"mt-8 w-16 h-1 bg-gradient-to-r from-red-500 to-yellow-400 mx-auto\"\n          initial={{ width: 0 }}\n          animate={{ width: progress === 100 ? 64 : 0 }}\n          transition={{ duration: 1, delay: 0.5 }}\n        />\n      </div>\n    </motion.div>\n  );\n};\n\nexport default LoadingScreen;","size_bytes":2620},"src/components/StripeCheckout.jsx":{"content":"import React, { useState } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { motion } from 'framer-motion';\nimport { useNavigate } from 'react-router-dom';\n\nconst stripePromise = loadStripe(import.meta.env.VITE_STRIPE_PUBLISHABLE_KEY);\n\n// Demo mode configuration\nconst DEMO_MODE = true;\n\nconst StripeCheckout = ({ tier, onClose, quantity = 1, onQuantityChange }) => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [showDemoMessage, setShowDemoMessage] = useState(false);\n  const navigate = useNavigate();\n\n  const handleCheckout = async () => {\n    setLoading(true);\n    setError(null);\n\n    if (DEMO_MODE) {\n      // Demo mode: show message and redirect to contact\n      setShowDemoMessage(true);\n      \n      setTimeout(() => {\n        onClose();\n        navigate('/contact');\n      }, 3000);\n      \n      setLoading(false);\n      return;\n    }\n\n    // Original Stripe flow (when DEMO_MODE is false)\n    try {\n      const stripe = await stripePromise;\n\n      const response = await fetch('/api/create-checkout-session', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          priceId: tier.priceId,\n          tierName: tier.title,\n          price: tier.price,\n          quantity: quantity,\n        }),\n      });\n\n      const session = await response.json();\n\n      if (session.error) {\n        setError(session.error);\n        return;\n      }\n\n      const result = await stripe.redirectToCheckout({\n        sessionId: session.sessionId,\n      });\n\n      if (result.error) {\n        setError(result.error.message);\n      }\n    } catch (err) {\n      setError('Something went wrong. Please try again.');\n      console.error('Checkout error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleQuantityChange = (newQuantity) => {\n    if (newQuantity >= 1 && newQuantity <= 10) {\n      onQuantityChange(newQuantity);\n    }\n  };\n\n  const totalPrice = (parseFloat(tier.price.replace('$', '')) * quantity).toFixed(2);\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n      className=\"fixed inset-0 bg-black bg-opacity-80 flex items-center justify-center z-50 p-4\"\n      onClick={onClose}\n    >\n      <motion.div\n        initial={{ scale: 0.8, opacity: 0 }}\n        animate={{ scale: 1, opacity: 1 }}\n        exit={{ scale: 0.8, opacity: 0 }}\n        className=\"bg-black border-2 border-yellow-400 rounded-lg p-8 max-w-md w-full\"\n        onClick={(e) => e.stopPropagation()}\n      >\n        <h3 className=\"text-2xl font-heading text-yellow-300 mb-4\">\n          Purchase {tier.title}\n        </h3>\n\n        <div className=\"mb-6\">\n          <p className=\"text-3xl font-bold text-red-500 mb-4\">{tier.price}</p>\n          <ul className=\"space-y-2 text-white\">\n            {tier.features.map((feature, i) => (\n              <li key={i} className=\"flex items-start\">\n                <span className=\"text-yellow-400 mr-2\">✔️</span>\n                {feature}\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        {error && (\n          <div className=\"mb-4 p-3 bg-red-600 text-white rounded\">\n            {error}\n          </div>\n        )}\n\n        {showDemoMessage && (\n          <motion.div\n            initial={{ opacity: 0, y: -10 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"mb-4 p-4 bg-yellow-600 text-black rounded-lg border-2 border-yellow-400\"\n          >\n            <p className=\"font-bold text-center\">\n              🔥 This is a demo site! If you'd like to book Muma's 'Maziness, contact me and I'll get you sizzling with the real thing👇\n            </p>\n            <p className=\"text-sm text-center mt-2\">Redirecting to contact page...</p>\n          </motion.div>\n        )}\n\n        <div className=\"flex items-center justify-between mb-4\">\n          <span className=\"text-lg text-gray-300\">Quantity:</span>\n          <div className=\"flex items-center gap-3\">\n            <button\n              onClick={() => handleQuantityChange(quantity - 1)}\n              disabled={quantity <= 1}\n              className=\"bg-red-600 hover:bg-red-700 disabled:bg-gray-600 text-white w-8 h-8 rounded flex items-center justify-center font-bold\"\n            >\n              -\n            </button>\n            <span className=\"text-xl font-bold text-white w-12 text-center\">{quantity}</span>\n            <button\n              onClick={() => handleQuantityChange(quantity + 1)}\n              disabled={quantity >= 10}\n              className=\"bg-red-600 hover:bg-red-700 disabled:bg-gray-600 text-white w-8 h-8 rounded flex items-center justify-center font-bold\"\n            >\n              +\n            </button>\n          </div>\n        </div>\n\n        <div className=\"border-t border-gray-600 pt-4\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-xl font-bold text-white\">Total:</span>\n            <span className=\"text-2xl font-bold text-yellow-400\">${totalPrice}</span>\n          </div>\n        </div>\n\n        <div className=\"flex gap-4\">\n          <button\n            onClick={handleCheckout}\n            disabled={loading}\n            className=\"flex-1 bg-red-600 hover:bg-red-700 disabled:bg-gray-600 text-white py-3 px-6 font-heading border-2 border-white transition\"\n          >\n            {loading ? (DEMO_MODE ? 'Redirecting...' : 'Processing...') : 'Complete Purchase'}\n          </button>\n\n          <button\n            onClick={onClose}\n            className=\"px-4 py-3 border-2 border-gray-400 text-gray-400 hover:text-white hover:border-white transition\"\n          >\n            Cancel\n          </button>\n        </div>\n      </motion.div>\n    </motion.div>\n  );\n};\n\nexport default StripeCheckout;","size_bytes":5861},"src/pages/Contact.jsx":{"content":"import React from 'react';\nimport { motion } from 'framer-motion';\nimport { FaEnvelope, FaHome } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\n\nconst Contact = () => {\n  const handleEmailClick = () => {\n    const subject = encodeURIComponent(\"Muma's 'Mazing BBQ — Booking/Inquiry\");\n    const body = encodeURIComponent(\"Hi Muma, I saw your demo and I'd like to…\");\n    window.location.href = `mailto:mumathedeveloper@gmail.com?subject=${subject}&body=${body}`;\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      className=\"min-h-screen bg-black text-white p-6\"\n    >\n      <div className=\"max-w-4xl mx-auto\">\n        {/* Header */}\n        <motion.div\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.2 }}\n          className=\"text-center mb-12\"\n        >\n          <h1 className=\"text-5xl font-heading text-yellow-400 mb-4 text-center\">\n            Ready to Cook? 🔥\n          </h1>\n          <p className=\"text-xl text-gray-300 max-w-2xl mx-auto\">\n            Thanks for checking out this demo! While the BBQ here is virtual, my real specialty is grilling up sizzling dev solutions and mouth‑watering digital experiences.\n          </p>\n        </motion.div>\n\n        {/* Main Content */}\n        <motion.div\n          initial={{ opacity: 0, scale: 0.95 }}\n          animate={{ opacity: 1, scale: 1 }}\n          transition={{ delay: 0.4 }}\n          className=\"bg-black border-4 border-yellow-400 rounded-lg p-8 text-center head-chef-glow hover:head-chef-glow-hover transition-all duration-300\"\n        >\n          <motion.img\n            src=\"/fire-icon.png\"\n            alt=\"Fire Icon\"\n            className=\"w-16 h-16 mx-auto mb-6 object-contain\"\n            initial={{ opacity: 0, scale: 0.8 }}\n            animate={{ opacity: 1, scale: 1 }}\n            transition={{ delay: 0.6, duration: 0.6 }}\n          />\n\n          <h2 className=\"text-3xl font-heading text-yellow-300 mb-6\">\n            Let's Make It Happen!\n          </h2>\n\n          <div className=\"space-y-4 mb-8\">\n            <div className=\"text-left max-w-2xl mx-auto space-y-3\">\n              <p className=\"flex items-start text-gray-300\">\n                <span className=\"text-yellow-400 mr-3 mt-1\">🍖</span>\n                <span><strong>Custom Web App Development</strong> – From landing pages to full‑stack apps, cooked to perfection.</span>\n              </p>\n              <p className=\"flex items-start text-gray-300\">\n                <span className=\"text-yellow-400 mr-3 mt-1\">✨</span>\n                <span><strong>Interactive & Animated UIs</strong> – Parallax, comic‑style effects, and scroll‑triggered magic that pops.</span>\n              </p>\n              <p className=\"flex items-start text-gray-300\">\n                <span className=\"text-yellow-400 mr-3 mt-1\">🎨</span>\n                <span><strong>Creative Web Design</strong> – I turn ordinary concepts into 'Mazing digital experiences.</span>\n              </p>\n              <p className=\"flex items-start text-gray-300\">\n                <span className=\"text-yellow-400 mr-3 mt-1\">🚀</span>\n                <span><strong>Demo → Live Deployment</strong> – I can take your idea from sketch to production on any platform of your choice.</span>\n              </p>\n            </div>\n          </div>\n\n          <p className=\"text-lg text-gray-300 mb-8 max-w-2xl mx-auto font-semibold\">\n            <strong>Drop me a line and let's spice up your next big project —</strong> no grill required. 😎\n          </p>\n\n          <motion.button\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={handleEmailClick}\n            className=\"bg-red-600 hover:bg-red-700 text-white font-heading text-xl px-12 py-4 border-2 border-white rounded-lg shadow-lg uppercase tracking-wide flex items-center mx-auto gap-3\"\n          >\n            <FaEnvelope />\n            Message Me\n          </motion.button>\n\n          <p className=\"text-sm text-gray-400 mt-4\">\n            I typically respond within 24 hours!\n          </p>\n        </motion.div>\n\n        {/* Navigation */}\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ delay: 0.6 }}\n          className=\"text-center mt-8\"\n        >\n          <Link\n            to=\"/\"\n            className=\"text-yellow-400 hover:text-yellow-300 underline font-heading\"\n          >\n            ← Back to Home\n          </Link>\n        </motion.div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default Contact;","size_bytes":4673},"src/pages/Success.jsx":{"content":"\nimport React, { useEffect, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { FaCheckCircle, FaHome } from 'react-icons/fa';\n\nconst Success = () => {\n  const [searchParams] = useSearchParams();\n  const [sessionData, setSessionData] = useState(null);\n  const sessionId = searchParams.get('session_id');\n\n  useEffect(() => {\n    if (sessionId) {\n      // Fetch session details from Stripe\n      fetch(`/api/checkout-session?session_id=${sessionId}`)\n        .then(res => res.json())\n        .then(data => setSessionData(data))\n        .catch(err => console.error('Error fetching session:', err));\n    }\n  }, [sessionId]);\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      className=\"min-h-screen bg-black text-white flex items-center justify-center p-6\"\n    >\n      <div className=\"max-w-md w-full text-center\">\n        <motion.div\n          initial={{ scale: 0 }}\n          animate={{ scale: 1 }}\n          transition={{ delay: 0.2, type: 'spring' }}\n          className=\"mb-8\"\n        >\n          <FaCheckCircle className=\"text-6xl text-green-500 mx-auto mb-4\" />\n        </motion.div>\n\n        <h1 className=\"text-4xl font-heading text-yellow-400 mb-4\">\n          Payment Successful! 🔥\n        </h1>\n\n        <p className=\"text-xl text-gray-300 mb-6\">\n          Your BBQ ticket has been purchased successfully!\n        </p>\n\n        <div className=\"bg-gray-900 border-2 border-yellow-400 rounded-lg p-6 mb-8\">\n          <h3 className=\"text-lg font-heading text-yellow-300 mb-3\">\n            Event Details\n          </h3>\n          <div className=\"text-left space-y-2\">\n            <p><strong>Event:</strong> Muma's Mazing BBQ</p>\n            <p><strong>Date:</strong> Saturday, August 9, 2025</p>\n            <p><strong>Time:</strong> 1:00 PM CDT</p>\n            <p><strong>Location:</strong> Brazosport College</p>\n            {sessionData && (\n              <p><strong>Confirmation:</strong> {sessionData.id}</p>\n            )}\n          </div>\n        </div>\n\n        <p className=\"text-sm text-gray-400 mb-6\">\n          A confirmation email has been sent to your email address.\n        </p>\n\n        <Link to=\"/\">\n          <motion.button\n            whileHover={{ scale: 1.05 }}\n            className=\"bg-red-600 hover:bg-red-700 text-white px-8 py-3 font-heading border-2 border-white flex items-center gap-2 mx-auto\"\n          >\n            <FaHome />\n            Back to Home\n          </motion.button>\n        </Link>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default Success;\n","size_bytes":2636},"src/pages/Tickets.jsx":{"content":"import React, { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { FaArrowLeft, FaCheck } from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\nimport SplitWords from \"../components/animations/SplitWords\";\nimport FAQ from \"../components/FAQ\";\nimport StripeCheckout from \"../components/StripeCheckout\";\nimport chefsBg from \"../assets/images/chefs-background.png\";\n\nconst pricingTiers = [\n  {\n    title: \"GENERAL ADMISSION\",\n    price: \"$25\",\n    priceId: \"price_general_admission\", // Replace with actual Stripe Price ID\n    features: [\n      \"Entry to the BBQ Arena\",\n      \"Access to all mouth-watering delights\",\n      \"One BBQ hero plate\",\n      \"Live music & games\",\n    ],\n  },\n  {\n    title: \"VIP PASS\",\n    price: \"$50\",\n    priceId: \"price_vip_pass\", // Replace with actual Stripe Price ID\n    features: [\n      \"Everything in General Admission\",\n      \"Priority seating\",\n      \"Muma's legendary wing platter\",\n    ],\n  },\n  {\n    title: \"ULTIMATE BBQ EXPERIENCE\",\n    price: \"$75\",\n    priceId: \"price_ultimate_experience\", // Replace with actual Stripe Price ID\n    features: [\n      \"All VIP Pass perks\",\n      \"Backstage grill tour\",\n      \"Access to BBQverse buffet\",\n      \"Limited-edition BBQverse apron\",\n    ],\n  },\n];\n\nconst Tickets = () => {\n  const [selectedTier, setSelectedTier] = useState(null);\n  const [showCheckout, setShowCheckout] = useState(false);\n  const [quantity, setQuantity] = useState(1);\n\n  const handleBuyNow = (tier) => {\n    setSelectedTier(tier);\n    setShowCheckout(true);\n  };\n\n  const closeCheckout = () => {\n    setShowCheckout(false);\n    setSelectedTier(null);\n  };\n\n  return (\n    <motion.section\n      style={{ backgroundImage: `url(${chefsBg})` }}\n      className=\"min-h-screen bg-cover bg-center bg-no-repeat text-white py-24 px-6 font-body relative overflow-hidden\"\n    >\n      {/* Black overlay */}\n      <div className=\"absolute inset-0 bg-black bg-opacity-70 z-0\"></div>\n\n      {/* Return Button */}\n      <div className=\"absolute top-6 left-6 z-50\">\n        <Link to=\"/\">\n          <motion.button\n            whileHover={{ scale: 1.1, rotate: -5 }}\n            className=\"bg-yellow-400 text-black p-3 rounded-full shadow-lg border-2 border-white\"\n          >\n            <FaArrowLeft className=\"text-lg\" />\n          </motion.button>\n        </Link>\n      </div>\n\n      <div className=\"relative z-10 max-w-5xl mx-auto text-center\">\n        <h1 className=\"text-5xl md:text-6xl font-heading text-orange-500 uppercase drop-shadow-lg mb-4 tracking-wider\">\n          GET TICKETS\n        </h1>\n\n        <p className=\"text-xl md:text-2xl text-white mb-16 max-w-3xl mx-auto\">\n          Choose your tier — every ticket comes with legendary flavors, fierce\n          vibes, and enough smoke to summon the BBQ gods.\n        </p>\n\n        {/* Pricing Grid */}\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8 mb-20\">\n          {pricingTiers.map((tier, index) => (\n            <motion.div\n              key={tier.title}\n              initial={{ opacity: 0, y: 50 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: index * 0.1 }}\n              className=\"bg-black border-2 border-yellow-400 p-6 rounded-lg shadow-lg glow-on-scroll hover:glow-on-hover transition-all duration-300\"\n            >\n              <div className=\"relative z-10\">\n                <h3 className=\"text-2xl font-heading text-yellow-400 mb-4 group-hover:text-yellow-300 transition-colors\">\n                  {tier.title}\n                </h3>\n                <div className=\"text-4xl font-bold text-white mb-6 group-hover:text-yellow-100 transition-colors\">\n                  {tier.price}\n                </div>\n                <ul className=\"space-y-3 mb-8\">\n                  {tier.features.map((feature, featureIndex) => (\n                    <li\n                      key={featureIndex}\n                      className=\"flex items-center text-gray-300 group-hover:text-gray-200 transition-colors\"\n                    >\n                      <FaCheck className=\"text-green-400 mr-3 flex-shrink-0\" />\n                      {feature}\n                    </li>\n                  ))}\n                </ul>\n                <button\n                  onClick={() => handleBuyNow(tier)}\n                  className=\"w-full bg-red-600 hover:bg-red-700 text-white py-3 px-6 font-heading border-2 border-white transition-all duration-300 hover:scale-105 hover:shadow-lg hover:shadow-red-500/50\"\n                >\n                  BUY NOW\n                </button>\n              </div>\n            </motion.div>\n          ))}\n        </div>\n\n        {/* CTA */}\n        <motion.button\n          onClick={() => handleBuyNow(pricingTiers[0])}\n          whileHover={{ scale: 1.08 }}\n          className=\"text-white text-xl font-heading bg-red-600 hover:bg-red-700 px-10 py-4 border-2 border-white shadow-lg uppercase tracking-wide\"\n        >\n          Purchase Now\n        </motion.button>\n      </div>\n\n      {/* Stripe Checkout Modal */}\n      {showCheckout && selectedTier && (\n        <StripeCheckout\n          tier={selectedTier}\n          quantity={quantity}\n          onQuantityChange={setQuantity}\n          onClose={() => {\n            setShowCheckout(false);\n            setSelectedTier(null);\n            setQuantity(1);\n          }}\n        />\n      )}\n    </motion.section>\n  );\n};\n\nexport default Tickets;\n","size_bytes":5419},"src/styles/tailwind.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/* 🔥 Flame glow effect */\n@keyframes glow {\n  0% {\n    text-shadow: 0 0 5px #ff4d00, 0 0 10px #ff4d00, 0 0 20px #ff4d00;\n  }\n  50% {\n    text-shadow: 0 0 15px #ff7b00, 0 0 25px #ff7b00, 0 0 35px #ff7b00;\n  }\n  100% {\n    text-shadow: 0 0 5px #ff4d00, 0 0 10px #ff4d00, 0 0 20px #ff4d00;\n  }\n}\n\n/* Apply the glow animation to any element */\n.animate-glow {\n  animation: glow 1.7s infinite ease-in-out;\n}\n\n/* Final white-bar protection */\n* {\n  box-sizing: border-box;\n}\n\nhtml,\nbody, #root {\n  margin: 0;\n  padding: 0;\n  overflow-x: hidden;\n  width: 100vw;\n  background-color: #000;\n  color: #fff;\n}\n\n/* Optimized Chef Card Glow - Faster & Lighter */\n@keyframes fastGlow {\n  0%, 100% {\n    box-shadow: 0 0 10px rgba(255, 215, 0, 0.4);\n  }\n  50% {\n    box-shadow: 0 0 15px rgba(255, 215, 0, 0.7);\n  }\n}\n\n/* Ultra-fast BBQ Flame Glow */\n@keyframes fastFlameGlow {\n  0%, 100% {\n    box-shadow: 0 0 6px rgba(255, 77, 0, 0.3);\n  }\n  50% {\n    box-shadow: 0 0 10px rgba(255, 140, 0, 0.5);\n  }\n}\n\n/* Optimized Head Chef Glow - Similar to hero text animation */\n@keyframes fastHeadChefGlow {\n  0%, 100% {\n    box-shadow: 0 0 15px rgba(255, 0, 0, 0.5), 0 0 25px rgba(255, 77, 0, 0.3);\n  }\n  50% {\n    box-shadow: 0 0 20px rgba(255, 0, 0, 0.7), 0 0 30px rgba(255, 77, 0, 0.5);\n  }\n}\n\n/* Fast, optimized utilities for better performance */\n.glow-on-scroll {\n  animation: fastGlow 2s ease-in-out infinite;\n  will-change: box-shadow;\n  transform: translateZ(0);\n}\n\n.hover\\:glow-on-hover:hover {\n  animation: fastGlow 1.8s ease-in-out infinite;\n}\n\n.bbq-flame-glow {\n  animation: fastFlameGlow 2s ease-in-out infinite;\n  will-change: box-shadow;\n  transform: translateZ(0);\n}\n\n.head-chef-glow {\n  animation: fastHeadChefGlow 1.7s ease-in-out infinite;\n  will-change: box-shadow;\n  transform: translateZ(0);\n}\n\n.hover\\:head-chef-glow-hover:hover {\n  animation: fastHeadChefGlow 1.5s ease-in-out infinite;;\n}","size_bytes":1952},"src/components/animations/FireTransition.jsx":{"content":"\nimport React from 'react';\nimport { motion } from 'framer-motion';\n\nconst FireTransition = ({ children, delay = 0 }) => {\n  return (\n    <motion.div\n      initial={{ \n        opacity: 0, \n        y: 20,\n        filter: \"blur(10px)\"\n      }}\n      whileInView={{ \n        opacity: 1, \n        y: 0,\n        filter: \"blur(0px)\"\n      }}\n      transition={{ \n        duration: 0.8, \n        delay,\n        ease: \"easeOut\" \n      }}\n      viewport={{ once: true, margin: \"-100px\" }}\n    >\n      {children}\n    </motion.div>\n  );\n};\n\nexport default FireTransition;\n","size_bytes":561},"src/components/animations/SplitWords.jsx":{"content":"import React, { useRef } from \"react\";\nimport { motion, useScroll, useTransform } from \"framer-motion\";\n\n/**\n * Optimized SplitWords component with faster animations\n * - Removes hook violations \n * - Uses simpler transforms for better performance\n * - Maintains smooth scroll-triggered reveals\n */\nconst SplitWords = ({ text, children, className = \"\" }) => {\n  const ref = useRef(null);\n  const { scrollYProgress } = useScroll({\n    target: ref,\n    offset: [\"start 0.8\", \"start 0.4\"]\n  });\n\n  const content = text ?? children;\n  const words = typeof content === \"string\" ? content.split(\" \") : [content];\n\n  return (\n    <span ref={ref} className={`inline-block relative ${className}`} style={{ position: 'relative' }}>\n      {words.map((word, idx) => {\n        // Simplified progress calculation for better performance\n        const wordStart = idx / words.length;\n        const wordEnd = (idx + 1) / words.length;\n\n        const opacity = useTransform(\n          scrollYProgress, \n          [wordStart, wordEnd], \n          [0, 1]\n        );\n\n        return (\n          <motion.span\n            key={idx}\n            style={{ \n              opacity,\n              willChange: 'opacity',\n              marginRight: idx < words.length - 1 ? '0.25rem' : '0'\n            }}\n            className=\"inline-block\"\n            transition={{\n              duration: 0.4,\n              ease: \"easeOut\"\n            }}\n          >\n            {word}\n          </motion.span>\n        );\n      })}\n    </span>\n  );\n};\n\nexport default SplitWords;","size_bytes":1535}},"version":1}